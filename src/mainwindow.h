#ifndef MAINWINDOW_H
#define MAINWINDOW_H

#include <QMainWindow>
#include <QGraphicsView>
#include <functional>
#include <QPushButton>
#include "QOnlineGameCenter.h"

QT_BEGIN_NAMESPACE
namespace Ui {
class MainWindow;
}
QT_END_NAMESPACE

/**
 * @class MainWindow
 * @brief The main application window, managing the user interface and primary logic.
 */
class MainWindow : public QMainWindow
{
    Q_OBJECT

public:
    /**
     * @brief Constructs the main application window.
     * @param parent The parent widget, default is nullptr.
     */
    MainWindow(QWidget *parent = nullptr);

    /**
     * @brief Destroys the main application window.
     */
    ~MainWindow();

protected:
    /**
     * @brief Handles the window close event.
     * @param event The close event.
     */
    void closeEvent(QCloseEvent *event) override;

private slots:
    /**
     * @brief Triggered when the "My Room" button is clicked.
     */
    void on_pushButtonMyRoom_clicked();

    /**
     * @brief Triggered when the "Join Room" button is clicked.
     */
    void on_pushButtonJoinRoom_clicked();

    /**
     * @brief Triggered when the "Back" button is clicked.
     */
    void on_pushButtonBack_clicked();

private:
    Ui::MainWindow *ui; ///< The UI instance generated by Qt Designer.
    Player *m_localPlayer; ///< Pointer to the local player object.
    QOnlineGameCenter *m_gameManager; ///< Pointer to the game manager.

    /**
     * @brief Displays the "Game Over" dialog.
     * @param winner The position of the winning player.
     */
    void showGameOverDialog(PlayerEnums::PlayerPosition winner);

    /**
     * @brief Sets up the game manager and its connections.
     * @param gameManager The game manager instance.
     */
    void setupGameManager(QOnlineGameCenter *gameManager);

    /**
     * @brief Configures the user interface with models and delegates.
     * @param gameManager The game manager instance.
     */
    void setupUI(QOnlineGameCenter *gameManager);
};

#endif // MAINWINDOW_H
